// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SurfaceType {
  ROCK // Planète rocheuse
  GAS // Planète gazeuse
  ICE // Planète glacée
  OCEAN // Planète océanique
  LAVA // Planète volcanique
  DESERT // Planète désertique
  FOREST // Planète forestière
  JUNGLE // Planète jungle
  SWAMP // Planète marécageuse
  TUNDRA // Planète toundra
  MOUNT // Planète montagneuse
  PLAINS // Planète de plaines
  CITY // Planète urbaine
  SPACE // Planète spatiale
  OTHER // Autre type de planète
}

model Planet {
  id          String      @id @default(cuid())
  uuid        String      @unique @default(cuid())
  name        String
  description String?
  appearance  Appearance?
  stats       Stats?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Appearance {
  id          String      @id @default(cuid())
  color       String // Couleur principale (hex ou rgba)
  texture     String? // Texture choisie ou générée
  size        Float // Taille de la planète
  brightness  Float // Luminosité (0.0 à 1.0)
  surfaceType SurfaceType // Type de surface : défini via l'enum
  planetId    String      @unique
  planet      Planet      @relation(fields: [planetId], references: [id])
}

model Stats {
  id          String @id @default(cuid())
  water       Float // Pourcentage d'eau (0.0 à 100.0)
  vegetation  Float // Pourcentage de végétation (0.0 à 100.0)
  atmosphere  Float // Densité de l’atmosphère (0.0 à 1.0)
  temperature Float // Température moyenne en degrés Celsius
  gravity     Float // Gravité relative (1.0 = gravité terrestre)
  planetId    String @unique
  planet      Planet @relation(fields: [planetId], references: [id])
}
